---
- name: Check that the control plane is available to accept connections
  ansible.builtin.wait_for:
    port: 6443
    host: 127.0.0.1
    delay: 5
    sleep: 5
    timeout: 300
  when: ( K3S_SERVER is defined and K3S_SERVER )
        or ( K3S_CLUSTER_INIT is defined and K3S_CLUSTER_INIT )
        and not ansible_check_mode

- name: Check that ctrl plane to be ready
  ansible.builtin.command: '{{ k3s_install_dir }}/kubectl get nodes -l "node-role.kubernetes.io/master=true" -o=jsonpath="{.items[*].metadata.name}"'
  changed_when: false
  register: kubectl_get_nodes_result
  until: kubectl_get_nodes_result.rc == 0
         and (kubectl_get_nodes_result.stdout.split() | length) >= (count_master | int)
  retries: 30
  delay: 20
  when: ( K3S_SERVER is defined and K3S_SERVER )
        or ( K3S_CLUSTER_INIT is defined and K3S_CLUSTER_INIT )
        and not ansible_check_mode
  become: true

- name: Check that all nodes to be ready
  ansible.builtin.command: '{{ k3s_install_dir }}/kubectl get nodes'
  changed_when: false
  register: kubectl_get_nodes_result
  failed_when: kubectl_get_nodes_result.stdout.find("was refused") != -1 or
               kubectl_get_nodes_result.stdout.find("ServiceUnavailable") != -1
  until: kubectl_get_nodes_result.rc == 0
         and kubectl_get_nodes_result.stdout.find("NotReady") == -1
  retries: 30
  delay: 20
  when: ( K3S_SERVER is defined and K3S_SERVER )
        or ( K3S_CLUSTER_INIT is defined and K3S_CLUSTER_INIT )
        and not ansible_check_mode
  become: true
